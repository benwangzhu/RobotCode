program sbt_poltrig
--***********************************************************
--
-- Copyright 2018 - 2025 speedbot All Rights reserved.
--
-- file Name: sbt_poltrig
--
-- Description:
--   Language             ==   Karel for FANUC ROBOT
--   Date                 ==   2025 - 04 - 29
--   Modification Data    ==   2025 - 07 - 28
--
-- Author: 
--
-- Version: 1.0
--***********************************************************
--
%comment = 'PolishTrigger'
%nolockgroup
%nobusylamp
%nopauseshft
%nopause = error + command + tpenable

%include include/lib_socket_t
%include include/lib_tpe_t
%include include/lib_logs_t
%include include/lib_transform_t
%include sbt_comm012_t
%include sbt_comm012_global                

var
    PhotoPint                           : xyzwprext
    CameraId                            : integer 
    CaptureId                           : integer 
    RetryCount                          : integer
    DelayTime                           : real
    Status                              : integer 

%include include/lib_motion_h
%include include/lib_inst_h
%include include/lib_tp_if_h
%include include/lib_string_h
%include sbt_comm012_h

begin 
    RetryCount  = 0
    CameraId    = get_iparm_(1)             --获取相机编号
    CaptureId   = get_iparm_(2)             --获取拍照点位编号
    DelayTime   = get_rparm_(3)             --获取出发拍照延时

    if (CameraId < 1) or (CameraId > 255) then 
        post_err(CC_UALARM, '传入无效相机编号[CAMER:' + int_to_str_(CameraId) + ']', 0, CC_ABORT)
    endif
    if (CaptureId < 1) or (CaptureId > 65535) then 
        post_err(CC_UALARM, '传入无效拍照点编号[POINT:' + int_to_str_(CaptureId) + ']', 0, CC_ABORT)
    endif
    if (DelayTime < 0.0) or (DelayTime > 30.0) then 
        post_err(CC_UALARM, '传入时间超范围[TIME:' + rel_to_str_(DelayTime) + ']', 0, CC_ABORT)
    endif

    delay round(DelayTime * 1000)

    while true do
        RetryCount = RetryCount + 1
        PhotoPint = cur_pos_(0, 0)

        Status = f001_it01_(PolishSock, PhotoPint, CameraId, CaptureId)
        if Status <> OK then  
            if (RetryCount > MAX_RETTRIG) or (Status < 0) then
                ErrDisplay('打磨相机拍照失败[Status:' + int_to_str_(Status) + ']', Status)
                RetryCount = 0
            endif
        else 
            return
        endif
        
        delay 20
    endwhile
end sbt_poltrig