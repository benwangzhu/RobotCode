--***********************************************************
--
-- Copyright 2018 - 2023 speedbot All Rights reserved.
--
-- file Name: lib_dpm_h
--
-- Description:
--   Language             ==   Karel for FANUC ROBOT
--   Date                 ==   2022 - 03 - 09
--   Modification Data    ==   2022 - 03 - 09
--
-- Author: speedbot
--
-- Version: 1.0
--*********************************************************************************************************--
--                                                                                                         --
--                                                      .^^^                                               --
--                                               .,~<c+{{{{{{t,                                            -- 
--                                       `^,"!t{{{{{{{{{{{{{{{{+,                                          --
--                                 .:"c+{{{{{{{{{{{{{{{{{{{{{{{{{+,                                        --
--                                "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{~                                       --
--                               ^{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{!.  `^                                    --
--                               c{{{{{{{{{{{{{c~,^`  `.^:<+{{{!.  `<{{+,                                  --
--                              ^{{{{{{{{{{{!^              `,.  `<{{{{{{+:                                --
--                              t{{{{{{{{{!`                    ~{{{{{{{{{{+,                              --
--                             ,{{{{{{{{{:      ,uDWMMH^        `c{{{{{{{{{{{~                             --
--                             +{{{{{{{{:     ,XMMMMMMw           t{{{{{{{{{{t                             --
--                            ,{{{{{{{{t     :MMMMMMMMM"          ^{{{{{{{{{{~                             --
--                            +{{{{{{{{~     8MMMMMMMMMMWD8##      {{{{{{{{{+                              --
--                           :{{{{{{{{{~     8MMMMMMMMMMMMMMH      {{{{{{{{{~                              --
--                           +{{{{{{{{{c     :MMMMMMMMMMMMMMc     ^{{{{{{{{+                               --
--                          ^{{{{{{{{{{{,     ,%MMMMMMMMMMH"      c{{{{{{{{:                               --
--                          `+{{{{{{{{{{{^      :uDWMMMX0"       !{{{{{{{{+                                --
--                           `c{{{{{{{{{{{"                    ^t{{{{{{{{{,                                --
--                             ^c{{{{{{{{{{{".               ,c{{{{{{{{{{t                                 --
--                               ^c{{{{{{{{{{{+<,^`     .^~c{{{{{{{{{{{{{,                                 --
--                                 ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t                                  --
--                                   ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t`                                  --
--                                     ^c{{{{{{{{{{{{{{{{{{{{{{{{{{+c"^                                    --                         
--                                       ^c{{{{{{{{{{{{{{{{{+!":^.                                         --
--                                         ^!{{{{{{{{t!",^`                                                --
--                                                                                                         --
--*********************************************************************************************************--
--
--***********************************************************
-- func dpm_clr_dt_()
--***********************************************************
--     in : DpmData      * array of real *		* Dpm 参数变量 *
--***********************************************************	
--	给一组 DPM 参数清零
--***********************************************************	
routine dpm_clr_dt_(DpmData : array of real) from lib_dpm

--***********************************************************
-- func dpm_cpr_dt_()
--***********************************************************
--     in : DpmData      * array of real *		* Dpm 参数变量 *
--     in : AccuVal      * real *               * 精度值 *
-- return ：             * boolean *            * 返回状态 *
--***********************************************************	
--	检查一组 DPM 参数是否在给定的精度范围内， 返回 TRUE 代表在精度范围内
--***********************************************************	
routine dpm_cpr_dt_(DpmData : array of real ;
                    AccuVal : real) : boolean from lib_dpm

--***********************************************************
-- func set_dpm_typ_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmType     * integer *             * Dpm 类型 *     DPM_MODAL 实时修正模式 / DPM_INLINE 目标点修正模式
--***********************************************************	
--	设置 DPM 修正模式
--***********************************************************	
routine set_dpm_typ_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmType : integer) from lib_dpm

--***********************************************************
-- func set_bef_aft_()
--***********************************************************
--     in : DpmFlt      * integer *		        * 参数 *    DPM_OFS_BEF 滤波前修正 / DPM_OFS_AFT 滤波后修正
--***********************************************************	
--	设置 DPM 滤波前还是滤波后偏移
--***********************************************************	
routine set_bef_aft_(DpmFlt : integer) from lib_dpm

--***********************************************************
-- func set_dpm_acu_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmAcu      * boolean *             * 参数 *     TRUE 累加型 / FALSE 覆盖型
--***********************************************************	
--	设置 DPM 通道是累加型还是覆盖型
--***********************************************************	
routine set_dpm_acu_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmAcu : boolean) from lib_dpm

--***********************************************************
-- func set_dpm_acu_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmFrm      * integer *             * 参数 *     DPM_FRM_PH 基于 PATH 方向修正 / DPM_FRM_TPH 基于 TOOL PATH 方向修正 / DPM_FRM_UFM 基于 PATH 方向修正 / DPM_FRM_UTL 基于 TOOL 方向修正
--***********************************************************	
--	设置 DPM 跟踪方向
--***********************************************************	
routine set_dpm_frm_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmFrm : integer)                  from lib_dpm

--***********************************************************
-- func set_dpm_trk_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmTrk      * integer *             * 参数 *     DPM_DYNAM 动态修正 / DPM_STAIC 静态修正 
--     in : DiIndex     * integer *             * 静态结束修正 DI 索引号 *
--***********************************************************	
--	设置 DPM 静态还是动态修正，为静态时， 输入 DI[DiIndex] = TRUE 就会结束修正
--***********************************************************	
routine set_dpm_trk_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmTrk : integer;
                     DiIndex : integer)                 from lib_dpm

--***********************************************************
-- func set_dpm_chn_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmChn      * integer *             * 参数 *     DPM_CHN_AI 模拟量接口 / DPM_CHN_GI 组信号接口 / DPM_CHN_DI 数字量信号接口 / DPM_CHN_SV 系统变量接口 / DPM_CHN_SR 传感器接口
--***********************************************************	
--	设置 DPM 通道输入模式
--***********************************************************	
routine set_dpm_chn_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmChn : integer)                  from lib_dpm

--***********************************************************
-- func set_dpm_lim_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmLim      * dpm_lim_t *           * 参数 *
--***********************************************************	
--	设置 DPM 极限修正量
--***********************************************************	
routine set_dpm_lim_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmLim : dpm_lim_t) from lib_dpm

--***********************************************************
-- func set_dpm_ofs_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_ini_t *           * 修正量 *
--***********************************************************	
--	设置 DPM 当前修正量
--***********************************************************	
routine set_dpm_ofs_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmOfs : dpm_ini_t) from lib_dpm

--***********************************************************
-- func set_dpm_spd_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_spd_t *           * 修正速度 *
--***********************************************************	
--	设置 DPM 修正速度
--***********************************************************	
routine set_dpm_spd_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmSpd : dpm_spd_t) from lib_dpm

--***********************************************************
-- func set_dpm_min_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_spd_t *           * 修正速度 *
--***********************************************************	
--	设置 DPM 最小修正速度，当通道修正值小于一帧的修正量时，机器人不会进行修正，直到通道满足最小修正值
--***********************************************************	
routine set_dpm_min_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmSpd : dpm_spd_t) from lib_dpm

--***********************************************************
-- func set_dpm_a1_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmFtr      * dpm_ftr_t *           * 滤波参数 *
--***********************************************************	
--	设置 DPM 一级滤波参数
--***********************************************************	
routine set_dpm_a1_(DpmSch : integer;
                    DpmGrp : integer;
                    DpmFtr : dpm_ftr_t) from lib_dpm

--***********************************************************
-- func set_dpm_a2_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmFtr      * dpm_ftr_t *           * 滤波参数 *
--***********************************************************	
--	设置 DPM 二级滤波参数
--***********************************************************	
routine set_dpm_a2_(DpmSch : integer;
                    DpmGrp : integer;
                    DpmFtr : dpm_ftr_t) from lib_dpm

--***********************************************************
-- func set_dpm_rem_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_rem_t *           * 剩余使用的修正量 *
--***********************************************************	
--	设置 DPM 剩余使用的修正量，一般只用于初始化
--***********************************************************	
routine set_dpm_rem_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmRem : dpm_rem_t) from lib_dpm

--***********************************************************
-- func set_dpm_rem_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_app_t *           * 已经使用的修正量 *
--***********************************************************	
--	设置 DPM 已经使用的修正量，一般只用于初始化
--***********************************************************	
routine set_dpm_app_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmApp : dpm_app_t) from lib_dpm

--***********************************************************
-- func get_dpm_ini_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_ini_t *           * 修正量 *
--***********************************************************	
--	获取 DPM 当前修正量
--***********************************************************	
routine get_dpm_ini_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmOfs : dpm_ini_t) from lib_dpm

--***********************************************************
-- func get_dpm_rem_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_rem_t *           * 还未使用的修正量 *
--***********************************************************	
--	获取 DPM 还未使用的修正量
--***********************************************************	
routine get_dpm_rem_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmRem : dpm_rem_t) from lib_dpm

--***********************************************************
-- func get_dpm_rem_()
--***********************************************************
--     in : DpmSch      * integer *		        * Dpm 参数编号 *
--     in : DpmGrp      * integer *             * Dpm 运动组编号 *
--     in : DpmOfs      * dpm_app_t *           * 已经使用的修正量 *
--***********************************************************	
--	获取 DPM 已经使用的修正量
--***********************************************************	
routine get_dpm_app_(DpmSch : integer;
                     DpmGrp : integer;
                     DpmApp : dpm_app_t) from lib_dpm

--***********************************************************
-- func get_dpm_rem_()
--***********************************************************
--     in : DpmOfs          * dpm_ini_t *		        * 修正量 *
--     in : DmpSpeed        * real *                    * 定义修正速度 *
--     in : DpmSpd          * dpm_spd_t *               * 计算出的修正速度 *
--***********************************************************	
--	根据修正量与预定义的修正速度计算出最终的修正速度，可以根据每个方向修正量的大小来计算出同时到达的速度
--***********************************************************	
routine dpm_tm_snp_(DpmOfs : dpm_ini_t;
                    DmpSpeed : real;
                    DpmSpd : dpm_spd_t) from lib_dpm

--***********************************************************
-- func get_dpm_rem_()
--***********************************************************
--     in : DpmSch          * integer *		        * Dpm参数编号 *
--     in : DpmGrp          * integer *             * Dpm组编号 *
--     in : AccuVal         * real *                * 精度 *
--***********************************************************	
--	等待当前修正量完全使用结束
--***********************************************************	
routine dpm_app_cmp_(DpmSch : integer;
                     DpmGrp : integer;
                     AccuVal : real) from lib_dpm


--***********************************************************
-- func dpm_sine_()
--***********************************************************
--     in : VectorDist          * real *		        * 前进方向距离 *
--     in : WaveLens            * real *                * 波长 mm*
--     in : Swing               * real *                * 振幅 mm*
--     in : Polar               * real *                * 波形偏置 °(以X方向移动为例, 正弦波在X坐标系的平移) *
--     in : CorrDire            * integer *             * 输出方向 * DPM_CORR_X ：X ; DPM_CORR_Y ： Y ; DPM_CORR_Z : Z
-- return :                     * dpm_ini_t *
--***********************************************************	
--	根据机器人的行走距离，计算出正弦指定方向对应的振幅
--***********************************************************	
routine dpm_sine_(VectorDist : real;
                  WaveLens : real;
                  Swing : real;
                  Polar : real;
                  CorrDire : integer) : dpm_ini_t from lib_dpm

--***********************************************************
-- func dpm_sine_()
--***********************************************************
--     in : VectorDist          * real *		        * 前进方向距离 *
--     in : WaveLens            * real *                * 波长 mm*
--     in : Swing               * real *                * 振幅 mm*
--     in : SwingDire           * boolean *             * 正反向 *
--     in : CorrDire            * integer *             * 输出方向 * DPM_CORR_X ：X ; DPM_CORR_Y ： Y ; DPM_CORR_Z : Z
-- return :                     * dpm_ini_t *
--***********************************************************	
--	根据机器人的行走距离，计算出三角波指定方向对应的振幅
--***********************************************************	
routine dpm_lin_(VectorDist : real;
                 WaveLens : real;
                 Swing : real;
                 SwingDire : boolean;
                 CorrDire : integer) : dpm_ini_t from lib_dpm

routine dpm_inl_crl_(DpmSch : integer;
                     DpmGrp : integer;
                     CtrlType : integer) from lib_dpm

routine dpm_inl_pr_(DpmSch : integer;
                    DpmGrp : integer;
                    PrIndex : integer) from lib_dpm
                     