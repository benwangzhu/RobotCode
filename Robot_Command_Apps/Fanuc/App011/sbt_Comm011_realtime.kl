program sbt_realtime
--***********************************************************
--
-- file Name: sbt_realtime
--
-- Description:
--   Language             ==   Karel for FANUC ROBOT
--   Date                 ==   2024 - 07 - 04
--   Modification Data    ==   2024 - 07 - 04
--
-- Author: speedbot
--
-- Version: 1.0
--*********************************************************************************************************--
--                                                                                                         --
--                                                      .^^^                                               --
--                                               .,~<c+{{{{{{t,                                            -- 
--                                       `^,"!t{{{{{{{{{{{{{{{{+,                                          --
--                                 .:"c+{{{{{{{{{{{{{{{{{{{{{{{{{+,                                        --
--                                "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{~                                       --
--                               ^{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{!.  `^                                    --
--                               c{{{{{{{{{{{{{c~,^`  `.^:<+{{{!.  `<{{+,                                  --
--                              ^{{{{{{{{{{{!^              `,.  `<{{{{{{+:                                --
--                              t{{{{{{{{{!`                    ~{{{{{{{{{{+,                              --
--                             ,{{{{{{{{{:      ,uDWMMH^        `c{{{{{{{{{{{~                             --
--                             +{{{{{{{{:     ,XMMMMMMw           t{{{{{{{{{{t                             --
--                            ,{{{{{{{{t     :MMMMMMMMM"          ^{{{{{{{{{{~                             --
--                            +{{{{{{{{~     8MMMMMMMMMMWD8##      {{{{{{{{{+                              --
--                           :{{{{{{{{{~     8MMMMMMMMMMMMMMH      {{{{{{{{{~                              --
--                           +{{{{{{{{{c     :MMMMMMMMMMMMMMc     ^{{{{{{{{+                               --
--                          ^{{{{{{{{{{{,     ,%MMMMMMMMMMH"      c{{{{{{{{:                               --
--                          `+{{{{{{{{{{{^      :uDWMMMX0"       !{{{{{{{{+                                --
--                           `c{{{{{{{{{{{"                    ^t{{{{{{{{{,                                --
--                             ^c{{{{{{{{{{{".               ,c{{{{{{{{{{t                                 --
--                               ^c{{{{{{{{{{{+<,^`     .^~c{{{{{{{{{{{{{,                                 --
--                                 ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t                                  --
--                                   ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t`                                  --
--                                     ^c{{{{{{{{{{{{{{{{{{{{{{{{{{+c"^                                    --                         
--                                       ^c{{{{{{{{{{{{{{{{{+!":^.                                         --
--                                         ^!{{{{{{{{t!",^`                                                --
--                                                                                                         --
--*********************************************************************************************************--
--
-- 用于后台通讯，处理前台的指令
--
%nolockgroup
%nobusylamp
-- %system
%comment = '焊接-后台实时'
-- %nopause = error + command + tpenable
-- %noabort = error + command
%include include/lib_math_t
%include sbt_Comm011_t
%include sbt_Comm011_global
%include include/lib_transform_t

var

    LastWvAmp               : real
    CorrWvAmp               : real
    CorrVol                 : real
    CorrCur                 : real

    VolGoIndex              : integer
    CurGoIndex              : integer
%include include/lib_logs_h
%include include/lib_thread_h
%include include/lib_socket_h
%include include/lib_math_h
%include include/lib_tp_if_h
%include include/lib_motion_h
%include include/lib_tpe_h
%include include/lib_packages_h
%include include/lib_string_h

routine adap_cur_(CurrentGap : real; StdGap : real; StdCur : real; Agin : real; MaxCur : real) : real from sbt_adapSt
routine adap_vol_(CurrentGap : real; StdGap : real; StdVol : real; Agin : real; MaxVol : real) : real from sbt_adapSt
routine adap_amp_(CurrentGap : real; StdGap : real; StdAmp : real; Agin : real; MaxAmp : real) : real from sbt_adapSt

begin

    set_sys_bol_('$wv_otf_gp[1].$otf_enable', true)

    VolGoIndex = get_sys_int_('$aweprr[1].$wfs_cmd.$port_num')
    CurGoIndex = get_sys_int_('$aweprr[1].$voltage_cmd.$port_num')

    while not ShutdownReq2 do


        select GlbWeldMode of

        case(MODE_NORMAL):
            ShutdownReq2 = true
        case(MODE_ADAP):
            LastWvAmp = get_sys_rel_('$wv_otf_gp[1].$otf_wvsch.$amplitude')

            if (get_sys_rel_('$wv_otf_gp[1].$chg_ampl') = 0.0) then

                CorrWvAmp = adap_amp_(get_rreg_(REG_SLOD_GAP), AdapParam.SdGap, AdapParam.SdAWvmp, AdapParam.AmpAgin, AdapParam.MaxAmp) 

                set_sys_rel_('$wv_otf_gp[1].$chg_ampl', CorrWvAmp - LastWvAmp)
            endif

            CorrCur = adap_cur_(get_rreg_(REG_SLOD_GAP), AdapParam.SdGap, AdapParam.SdWeldCur, AdapParam.AmpAgin, AdapParam.MaxCur)
            CorrVol = adap_vol_(get_rreg_(REG_SLOD_GAP), AdapParam.SdGap, AdapParam.SdWeldVol, AdapParam.VolAgin, AdapParam.MaxVol)
            gout[CurGoIndex] = round(CorrCur * 10.0)
            gout[VolGoIndex] = round(CorrVol * 10.0)
        case(MODE_ADAP2):
            LastWvAmp = get_sys_rel_('$wv_otf_gp[1].$otf_wvsch.$amplitude')

            if (get_sys_rel_('$wv_otf_gp[1].$chg_ampl') = 0.0) then

                CorrWvAmp = get_rreg_(REG_SOLD_AMP)

                set_sys_rel_('$wv_otf_gp[1].$chg_ampl', CorrWvAmp - LastWvAmp)
            endif

            CorrCur = get_rreg_(REG_SOLD_CUR)
            CorrVol = get_rreg_(REG_SOLD_VOL)
            gout[CurGoIndex] = round(CorrCur * 10.0)
            gout[VolGoIndex] = round(CorrVol * 10.0)
        endselect
        delay(16)
    endwhile

    -- set_sys_bol_('$wv_otf_gp[1].$otf_enable', true)
    -- wait for flg[21]
    -- while flg[21] do

    --     LastAmpl = get_sys_rel_('$wv_otf_gp[1].$otf_wvsch.$amplitude')

    --     if (get_sys_rel_('$wv_otf_gp[1].$chg_ampl') = 0.0) then
    --         --set_real_sv('$wv_otf_gp[1].$chg_freq', WeaveParam.Frequency - LastWvVal.Frequency)
    --         set_sys_rel_('$wv_otf_gp[1].$chg_ampl', get_rreg_(19) - LastAmpl)
    --     endif

    --     delay(16)

    -- endwhile

end sbt_realtime


