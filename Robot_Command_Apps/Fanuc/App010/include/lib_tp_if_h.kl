--***********************************************************
--
-- Copyright 2018 - 2024 speedbot All Rights reserved.
--
-- file Name: lib_tp_if_h
--
-- Description:
--   Language             ==   Karel for FANUC ROBOT
--   Date                 ==   2021 - 09 - 05
--   Modification Data    ==   2021 - 11 - 17
--
-- Author: speedbot
--
-- Version: 1.0
--*********************************************************************************************************--
--                                                                                                         --
--                                                      .^^^                                               --
--                                               .,~<c+{{{{{{t,                                            -- 
--                                       `^,"!t{{{{{{{{{{{{{{{{+,                                          --
--                                 .:"c+{{{{{{{{{{{{{{{{{{{{{{{{{+,                                        --
--                                "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{~                                       --
--                               ^{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{!.  `^                                    --
--                               c{{{{{{{{{{{{{c~,^`  `.^:<+{{{!.  `<{{+,                                  --
--                              ^{{{{{{{{{{{!^              `,.  `<{{{{{{+:                                --
--                              t{{{{{{{{{!`                    ~{{{{{{{{{{+,                              --
--                             ,{{{{{{{{{:      ,uDWMMH^        `c{{{{{{{{{{{~                             --
--                             +{{{{{{{{:     ,XMMMMMMw           t{{{{{{{{{{t                             --
--                            ,{{{{{{{{t     :MMMMMMMMM"          ^{{{{{{{{{{~                             --
--                            +{{{{{{{{~     8MMMMMMMMMMWD8##      {{{{{{{{{+                              --
--                           :{{{{{{{{{~     8MMMMMMMMMMMMMMH      {{{{{{{{{~                              --
--                           +{{{{{{{{{c     :MMMMMMMMMMMMMMc     ^{{{{{{{{+                               --
--                          ^{{{{{{{{{{{,     ,%MMMMMMMMMMH"      c{{{{{{{{:                               --
--                          `+{{{{{{{{{{{^      :uDWMMMX0"       !{{{{{{{{+                                --
--                           `c{{{{{{{{{{{"                    ^t{{{{{{{{{,                                --
--                             ^c{{{{{{{{{{{".               ,c{{{{{{{{{{t                                 --
--                               ^c{{{{{{{{{{{+<,^`     .^~c{{{{{{{{{{{{{,                                 --
--                                 ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t                                  --
--                                   ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t`                                  --
--                                     ^c{{{{{{{{{{{{{{{{{{{{{{{{{{+c"^                                    --                         
--                                       ^c{{{{{{{{{{{{{{{{{+!":^.                                         --
--                                         ^!{{{{{{{{t!",^`                                                --
--                                                                                                         --
--*********************************************************************************************************--
--
--***********************************************************
-- func get_iparm_()
--***********************************************************
--		in : ParmNo				* integer *		* 参数编号 *
--	return : 					* integer *		* 返回整型参数的值 *
--***********************************************************	
--	获取整型参数的值
--***********************************************************	
routine get_iparm_(ParmNo : integer) : integer from lib_tp_if
   
--***********************************************************
-- func get_rparm_()
--***********************************************************
--		in : ParmNo				* integer *		* 参数编号 *
--	return : 					* integer *		* 返回浮点型参数的值 *
--***********************************************************	
--	获取浮点型参数的值
--***********************************************************	
routine get_rparm_(ParmNo : integer) : real from lib_tp_if
   
--***********************************************************
-- func get_sparm_()
--***********************************************************
--		in : ParmNo				* integer *		* 参数编号 *
--	return : 					* integer *		* 返回字符串型参数的值 *
--***********************************************************	
--	获取字符串型参数的值
--***********************************************************	
routine get_sparm_(ParmNo : integer) : string from lib_tp_if
   
--***********************************************************
-- func get_ireg_()
--***********************************************************
--		in : RegNo				* integer *		* 寄存器号 *
--	return : 					* integer *		* 返回整型寄存器值 *
--***********************************************************
--	获取R[*]寄存器的整型值
--***********************************************************
routine get_ireg_(RegNo : integer) : integer from lib_tp_if
   
--***********************************************************
-- func get_rreg_()
--***********************************************************
--		in : RegNo				* integer *		* 寄存器号 *
--	return : 					* real *		* 返回浮点型寄存器值 *
--***********************************************************
--	获取R[*]寄存器的浮点型值
--***********************************************************
routine get_rreg_(RegNo : integer) : real from lib_tp_if 
   
--***********************************************************
-- func get_preg_()
--***********************************************************
--		in : PRegNo				* integer *		* 寄存器号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的直角坐标值
--***********************************************************
routine get_preg_(PRegNo : integer) : xyzwprext from lib_tp_if

--***********************************************************
-- func get_g2_preg_()
--***********************************************************
--		in : PRegNo				* integer *		* 寄存器号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的直角坐标值 ** 运动组2
--***********************************************************
routine get_g2_preg_(PRegNo : integer) : xyzwprext in group[2] from lib_tp_if
   
--***********************************************************
-- func g_mulgp_pr_()
--***********************************************************
--		in : PRegNo				* integer *		* 寄存器号 *
--		in : GrpId				* integer *		* 运动组编号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的直角坐标值 ** 指定运动组
--***********************************************************
routine g_mulgp_pr_(PRegNo : integer;
                    GrpId : integer) : xyzwprext from lib_tp_if
   
--***********************************************************
-- func get_jpreg_()
--***********************************************************
--		in : JPRegNo			* integer *		* 寄存器号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的关节坐标值
--***********************************************************
routine get_jpreg_(JPRegNo : integer) : jointpos from lib_tp_if

--***********************************************************
-- func get_g2_jpr_()
--***********************************************************
--		in : JPRegNo			* integer *		* 寄存器号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的关节坐标值 ** 运动组2
--***********************************************************
routine get_g2_jpr_(JPRegNo : integer) : jointpos in group[2] from lib_tp_if
   
--***********************************************************
-- func g_mulgp_jpr_()
--***********************************************************
--		in : JPRegNo			* integer *		* 寄存器号 *
--		in : GrpId				* integer *		* 运动组编号 *
--	return : 					* xyzwprext *	* 返回位置型寄存器值 *
--***********************************************************
--	获取PR[*]寄存器的关节坐标值 ** 指定运动组
--***********************************************************
routine g_mulgp_jpr_(JPRegNo : integer;
                     GrpId : integer) : jointpos from lib_tp_if
   
--***********************************************************
-- func get_sreg_()
--***********************************************************
--		in : SRegNo				* integer *		* 寄存器号 *
--	return : 					* string *		* 返回字符串型寄存器值 *
--***********************************************************
--	获取SR[*]寄存器的值
--***********************************************************
routine get_sreg_(SRegNo : integer) : string from lib_tp_if


--***********************************************************
-- func get_io_()
--***********************************************************
--		in : PortType			* integer *		* 端口类型 *
--      in : PortNo             * integer *     * Io编号 *
--	return : 					* integer *		* 返回字符串型寄存器值 *
--***********************************************************
--	获取指定IO的值
--***********************************************************
routine get_io_(PortType : integer;
                PortNo : integer) : integer from lib_tp_if

--***********************************************************
-- func io_is_cfg_()
--***********************************************************
--		in : PortType			* integer *		* 端口类型 *
--      in : PortNo             * integer *     * Io编号 *
--	return : 					* boolean *		* 已经配置就返回 TRUE *
--***********************************************************
--	获取指定IO是否已经进行了配置
--***********************************************************
routine io_is_cfg_(PortType : integer;
                   PortNo : integer) : boolean from lib_tp_if
   
--***********************************************************
-- func get_sys_int_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--	return : 					* integer *		* 返回此系统变量的值 *
--***********************************************************
--	获取整型系统变量的值
--***********************************************************
routine get_sys_int_(SysvarName : string) : integer from lib_tp_if

--***********************************************************
-- func get_sys_rel_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--	return : 					* real *		* 返回此系统变量的值 *
--***********************************************************
--	获取浮点型系统变量的值
--***********************************************************
routine get_sys_rel_(SysvarName : string) : real from lib_tp_if

--***********************************************************
-- func get_sys_str_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--	return : 					* string *		* 返回此系统变量的值 *
--***********************************************************
--	获取字符串型系统变量的值
--***********************************************************
routine get_sys_str_(SysvarName : string) : string from lib_tp_if

--***********************************************************
-- func get_sys_pos_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--	return : 					* position *	* 返回此系统变量的值 *
--***********************************************************
--	获取位置型系统变量的值
--***********************************************************
routine get_sys_pos_(SysvarName : string) : position from lib_tp_if

--***********************************************************
-- func get_sys_bol_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--	return : 					* boolean *		* 返回此系统变量的值 *
--***********************************************************
--	获取布尔型系统变量的值
--***********************************************************
routine get_sys_bol_(SysvarName : string) : boolean from lib_tp_if

--***********************************************************
-- func set_ireg_()
--***********************************************************
--		in : RegNo				* integer *		* R寄存器编号 *
--		in : IntVal				* integer *		* 设置值 *
--***********************************************************
--	设置R寄存器整数值
--***********************************************************
routine set_ireg_(RegNo,IntVal : integer) from lib_tp_if
   
--***********************************************************
-- func set_rreg_()
--***********************************************************
--		in : RegNo				* integer *		* R寄存器编号 *
--		in : realVal			* real *		* 设置值 *
--***********************************************************
--	设置R寄存器浮点数值
--***********************************************************
routine set_rreg_(RegNo : integer;
                  realVal : real) from lib_tp_if
   
--***********************************************************
-- func set_preg_()
--***********************************************************
--		in : PRegNo				* integer *		* PR寄存器编号 *
--		in : PosVal				* xyzwprext *	* 设置值 *
--***********************************************************
--	设置直角坐标位置寄存器的值
--***********************************************************
routine set_preg_(PRegNo : integer;
                  PosVal : xyzwprext) from lib_tp_if

--***********************************************************
-- func set_g2_preg_()
--***********************************************************
--		in : PRegNo				* integer *		* PR寄存器编号 *
--		in : PosVal				* xyzwprext *	* 设置值 *
--***********************************************************
--	设置直角坐标位置寄存器的值 ** 运动组2
--***********************************************************
routine set_g2_preg_(PRegNo : integer;
                     PosVal : xyzwprext in group[2]) from lib_tp_if
   
--***********************************************************
-- func s_mulgp_pr_()
--***********************************************************
--		in : PRegNo				* integer *		* PR寄存器编号 *
--		in : GrpId				* integer *		* 运动组编号 *
--		in : PosVal				* xyzwprext *	* 设置值 *
--***********************************************************
--	设置直角坐标位置寄存器的值 ** 指定运动组
--***********************************************************
routine s_mulgp_pr_(PRegNo : integer;
                    GrpId : integer;
                    PosVal : xyzwprext) from lib_tp_if
   
--***********************************************************
-- func set_jpreg_()
--***********************************************************
--		in : JPRegNo			* integer *		* PR寄存器编号 *
--		in : JPosVal			* jointpos *	* 设置值 *
--***********************************************************
--	设置关节坐标位置寄存器的值
--***********************************************************
routine set_jpreg_(JPRegNo : integer;
                   JPosVal : jointpos) from lib_tp_if

--***********************************************************
-- func set_g2_jpr_()
--***********************************************************
--		in : JPRegNo			* integer *		* PR寄存器编号 *
--		in : JPosVal			* jointpos *	* 设置值 *
--***********************************************************
--	设置关节坐标位置寄存器的值 ** 运动组2
--***********************************************************
routine set_g2_jpr_(JPRegNo : integer;
                    JPosVal : jointpos in group[2]) from lib_tp_if
   
--***********************************************************
-- func s_mulgp_jpr_()
--***********************************************************
--		in : JPRegNo			* integer *		* PR寄存器编号 *
--		in : GrpId				* integer *		* 运动组编号 *
--		in : JPosVal			* jointpos *	* 设置值 *
--***********************************************************
--	设置关节坐标位置寄存器的值 ** 运动组2
--***********************************************************
routine s_mulgp_jpr_(JPRegNo : integer;
                     GrpId : integer;
                     JPosVal : jointpos) from lib_tp_if
   
--***********************************************************
-- func set_sreg_()
--***********************************************************
--		in : SRegNo				* integer *		* SR寄存器编号 *
--		in : StrVal				* string *		* 设置值 *
--***********************************************************
--	设置字符串寄存器的值
--***********************************************************
routine set_sreg_(SRegNo : integer;
                  StrVal : string) from lib_tp_if


--***********************************************************
-- func set_io_()
--***********************************************************
--		in : PortType			* integer *		* 端口类型 *
--      in : PortNo             * integer *     * Io编号 *
--      in : PortVal            * integer *     * Io值 *
--	return : 					* integer *		* 返回字符串型寄存器值 *
--***********************************************************
--	设置指定IO的值
--***********************************************************
routine set_io_(PortType : integer;
                PortNo : integer;
                PortVal : integer) from lib_tp_if

--***********************************************************
-- func set_sys_int_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--		in : IntVal				* integer *		* 设置值 *
--***********************************************************
--	设置整型系统变量的值
--***********************************************************
routine set_sys_int_(SysvarName : string;
                     IntVal : integer) from lib_tp_if

--***********************************************************
-- func set_sys_rel_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--		in : RelVal				* real *		* 设置值 *
--***********************************************************
--	设置浮点型系统变量的值
--***********************************************************
routine set_sys_rel_(SysvarName : string;
                     RelVal : real) from lib_tp_if

--***********************************************************
-- func set_sys_str_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--		in : StrVal				* string *		* 设置值 *
--***********************************************************
--	设置字符型系统变量的值
--***********************************************************
routine set_sys_str_(SysvarName : string;
                     StrVal : string) from lib_tp_if

--***********************************************************
-- func set_sys_pos_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--		in : PosVal				* position *	* 设置值 *
--***********************************************************
--	设置位置型系统变量的值
--***********************************************************
routine set_sys_pos_(SysvarName : string;
                     PosVal : position) from lib_tp_if

--***********************************************************
-- func set_sys_bol_()
--***********************************************************
--		in : SysvarName			* string *		* 系统变量名 *
--		in : BoolVal			* boolean *		* 设置值 *
--***********************************************************
--	设置布尔型系统变量的值
--***********************************************************
routine set_sys_bol_(SysvarName : string;
                     BoolVal : boolean) from lib_tp_if

--***********************************************************
-- func init_vr_()
--***********************************************************
--		in : VregNo				* integer *		* 需要初始化VR寄存器的编号 *
--***********************************************************
--	初始化指定的 VR 寄存器
--	只能对于有 VR 寄存器的机器人使用
--***********************************************************
routine init_vr_(VregNo : integer) from lib_tp_if

--***********************************************************
-- func abort_task_()
--***********************************************************
-- 		in : TaskName			* string *		* 需要终止的程序名 *
--***********************************************************
--	终止一个任务
--	输入程序名为 '*', 可以终止所有没有进行特殊声明的程序
--***********************************************************
routine abort_task_(TaskName : string) from lib_tp_if

--***********************************************************
-- func multi_task_()
--***********************************************************
-- 		in : TaskName			* string *		* 需要创建任务的程序名称 *
--	return : 					* boolean *		* TRUE为创建成功 *
--***********************************************************
--	创建一个新线程
--***********************************************************
routine multi_task_(TaskName : string) : boolean from lib_tp_if

--***********************************************************
-- func tp_enable_()
--***********************************************************
-- 	return : 				* boolean *		* TRUE表示示教器手动 *
--***********************************************************
--	检查示教器是否处于手动状态
--***********************************************************
routine tp_enable_ : boolean from lib_tp_if

--***********************************************************
-- func tp_fault_()
--***********************************************************
-- 	return : 				* boolean *		* TRUE表示报错中 *
--***********************************************************
--	检测机器人是否处于报错中
--***********************************************************
routine tp_fault_ : boolean from lib_tp_if

--***********************************************************
-- func tp_running_()
--***********************************************************
-- 	return : 				* boolean *		* TRUE表示在运行 *
--***********************************************************
--	检查机器人主任务是否处于运行状态
--***********************************************************
routine tp_running_ : boolean from lib_tp_if

--***********************************************************
-- func tp_pause_()
--***********************************************************
-- 	return : 				* boolean *		* TRUE表示处于暂停状态 *
--***********************************************************
--	检测主任务是否处于暂停状态
--***********************************************************
routine tp_pause_ : boolean from lib_tp_if

--***********************************************************
-- func tsk_running_()
--***********************************************************
--  	in : TaskName		* string *		* 需要检测的程序 *
-- 	return : 				* boolean *		* TRUE表示在运行 *
--***********************************************************
--	检查指定的程序是否运行中
--***********************************************************
routine tsk_running_(TaskName : string) : boolean from lib_tp_if

--***********************************************************
-- func get_err_()
--***********************************************************
-- return : 				* integer *		* 返回错误代码 *
--***********************************************************
--	返回已经发生错误的错误代码
--	错误代码参照发那科错误代码手册
--***********************************************************
routine get_err_ : integer from lib_tp_if 

--***********************************************************
-- func get_err_()
--***********************************************************
-- return : 				* string *		* 返回错误描述 *
--***********************************************************
--	返回已经发生错误的错误描述
--	错误描述参照发那科错误代码手册
--***********************************************************
routine get_err_msg_ : string from lib_tp_if 

--***********************************************************
-- func op_mode_()
--***********************************************************
-- return : 				* integer *		* 返回控制柜钥匙模式 *
--***********************************************************
--	获取控制柜模式钥匙所处的状态
--	T1 		== 1
--	T2 		== 2
--	AUTO 	== 3
--***********************************************************
routine op_mode_ : integer from lib_tp_if

--***********************************************************
-- func is_vir_rob_()
--***********************************************************
-- return : 				* boolean *		* true : 虚拟机器人 false ：真实机器人 *
--***********************************************************
--	返回是否在 roboguide 中运行
--***********************************************************
routine is_vir_rob_ : boolean from lib_tp_if

--***********************************************************
-- func get_host_ip_()
--***********************************************************
--  in    : HostNum         * integer *     * 机器人网口编号 *
-- return : 				* string *		* 对应的 ip 地址 *
--***********************************************************
--	返回菜单 设置 主机通讯 TCP/IP 中填入的 IP地址
--***********************************************************
routine get_host_ip_(HostNum : integer) : string from lib_tp_if

--***********************************************************
-- func chk_order_()
--***********************************************************
--  in    : OrderfilName    * string *     * 选项名 *
-- return : 				* boolean *	   * 返回选项是否存在 *
--***********************************************************
--	返回菜单 设置 主机通讯 TCP/IP 中填入的 IP地址
--***********************************************************
routine chk_order_(OrderfilName : string) : boolean from lib_tp_if

--***********************************************************
-- func set_io_cmt_()
--***********************************************************
--  in    : IoType          * integer *     * 信号类型 *
--  in    : IoIndex         * integer *     * 信号编号 *
--  in    : IoComment       * string *      * 注释名称 *
--***********************************************************
--	返回菜单 设置 主机通讯 TCP/IP 中填入的 IP地址
--***********************************************************
routine set_io_cmt_(IoType : integer
                    IoIndex : integer;
                    IoComment : string) from lib_tp_if