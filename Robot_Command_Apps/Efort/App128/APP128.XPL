<?xml version="1.0" encoding="utf-8"?>
<!-- Date(ymd) / time(hms): 2025/7/30 18:42:18 -->
<Xpl-source><HostEnvironment><Config><FileId>0x000072ae</FileId><Target>Robox Motion Control</Target><XplType>RoboticProgramLanguage</XplType></Config></HostEnvironment><XplEnvironment><Info><Title LcId="1033"><![CDATA[XPL program]]></Title><Description LcId="1033"><![CDATA[XPL program edited from teachgun]]></Description><Version>1.0.0</Version><Author>Robox SpA</Author></Info><VarDeclarations><VarExtern /><VarGlobal><Var><Name>CMD_CTRL</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>1</InitValue></Var><Var><Name>CMD_INIT</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>128</InitValue></Var><Var><Name>CMD_STOP</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>200</InitValue></Var><Var><Name>PRC_ARC_ST</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>101</InitValue></Var><Var><Name>PRC_ARC_ED</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>102</InitValue></Var><Var><Name>POINT_GLB_AREA</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>1</InitValue></Var><Var><Name>POINT_KEEP_AREA</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>2</InitValue></Var><Var><Name>MTN_MOVJ</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>6</InitValue></Var><Var><Name>MTN_MOVL</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>7</InitValue></Var><Var><Name>MTN_MOVC1</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>8</InitValue></Var><Var><Name>MTN_MOVC2</Name><Type>DINT</Type><Attrib>const</Attrib><Attrib>public</Attrib><InitValue>0</InitValue></Var><Var><Name>ROBOT_AXIS</Name><Type>DINT</Type><Attrib>retain</Attrib><InitValue>8</InitValue></Var><Var><Name>EXT_AXIS</Name><Type>DINT</Type><Attrib>retain</Attrib><InitValue>0</InitValue></Var><Var><Name>InformData</Name><Type>POINTJ</Type><Array>[0..9]</Array><Attrib>retain</Attrib><InitValue>[[8,0,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null],[null,null,null,null,null,null]]</InitValue></Var><Var><Name>GlbMoveId</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>PcTellId</Name><Type>DINT</Type><InitValue>-1</InitValue></Var><Var><Name>PcCmd</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>PcSep</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>PcPointNum</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>PcType</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>RobotTellId</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>RobotCmd</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>RobotSep</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>RobotAck</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>CopyTellId</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>CopyCmd</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>CopyPointNum</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>CopyWriteArea</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>PcWriteArea</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>ToolData</Name><Type>TOOL</Type></Var><Var><Name>TrjMoveType</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>TrjProcessType</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>TrjSpeed</Name><Type>SPEED</Type></Var><Var><Name>TrjAcc</Name><Type>DINT</Type></Var><Var><Name>TrjSmoot</Name><Type>ZONE</Type></Var><Var><Name>IntrStopMove</Name><Type>INTR</Type></Var></VarGlobal></VarDeclarations><Pous><Pou><Name>comm128_comm_cfig_</Name><Type>Subroutine</Type><VarDeclarations /><Body><alias><var>PcTellId</var><refvar>comutil.PC_INT[1]</refvar></alias><alias><var>PcCmd</var><refvar>comutil.PC_INT[2]</refvar></alias><alias><var>PcSep</var><refvar>comutil.PC_INT[3]</refvar></alias><alias><var>PcPointNum</var><refvar>comutil.PC_INT[4]</refvar></alias><alias><var>PcType</var><refvar>comutil.PC_INT[5]</refvar></alias><alias><var>RobotTellId</var><refvar>comutil.PC_INT[21]</refvar></alias><alias><var>RobotCmd</var><refvar>comutil.PC_INT[22]</refvar></alias><alias><var>RobotSep</var><refvar>comutil.PC_INT[23]</refvar></alias><alias><var>RobotAck</var><refvar>comutil.PC_INT[24]</refvar></alias><alias><var>GlbMoveId</var><refvar>comutil.PC_INT[41]</refvar></alias><alias><var>PcWriteArea</var><refvar>comutil.PC_INT[42]</refvar></alias><set><dest>ROBOT_AXIS</dest><expr>8</expr></set><set><dest>EXT_AXIS</dest><expr>0</expr></set><set><dest>ToolData</dest><expr>tool2</expr></set></Body></Pou><Pou><Name>comm128_comm_init_</Name><Type>Subroutine</Type><VarDeclarations /><Body><call><subroutine><name>comm128_comm_cfig_</name><args><arg /></args><results /></subroutine></call><set><dest>PcTellId</dest><expr>comutil.PC_INT[1]</expr></set><set><dest>PcCmd</dest><expr>comutil.PC_INT[2]</expr></set><set><dest>PcSep</dest><expr>comutil.PC_INT[3]</expr></set><set><dest>PcPointNum</dest><expr>comutil.PC_INT[4]</expr></set><set><dest>PcType</dest><expr>comutil.PC_INT[5]</expr></set><set><dest>RobotTellId</dest><expr>0</expr></set><set><dest>RobotCmd</dest><expr>128</expr></set><set><dest>RobotSep</dest><expr>0</expr></set><set><dest>RobotAck</dest><expr>0</expr></set><set><dest>InformData[0].j1</dest><expr>ROBOT_AXIS</expr></set><set><dest>InformData[0].j2</dest><expr>EXT_AXIS</expr></set><call><subroutine><name>comutil.SetPC_POINTJ</name><args><arg>1</arg><arg>InformData[0]</arg></args><results /></subroutine></call><set><dest>GlbMoveId</dest><expr>0</expr></set><set><dest>CopyTellId</dest><expr>0</expr></set><kmaxt><speed>500</speed><acc>500</acc><dec>500</dec><jerk /></kmaxt><kmaxj><speed>50</speed><acc>50</acc><dec>50</dec><jerk /></kmaxj></Body></Pou><Pou><Name>copy_data_</Name><Type>Subroutine</Type><VarDeclarations /><Body><set><dest>CopyTellId</dest><expr>PcTellId</expr></set><set><dest>CopyCmd</dest><expr>PcCmd</expr></set><set><dest>CopyPointNum</dest><expr>PcPointNum</expr></set><set><dest>CopyWriteArea</dest><expr>PcWriteArea</expr></set></Body></Pou><Pou><Name>exec_trajectorys_</Name><Type>Subroutine</Type><VarDeclarations><VarLocal><Var><Name>PathLen</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>SpeedData</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>SmootData</Name><Type>DINT</Type><InitValue>0</InitValue></Var><Var><Name>MoveId</Name><Type>DINT</Type><InitValue>0</InitValue></Var></VarLocal></VarDeclarations><Body><select><expr>CopyWriteArea</expr><pouref>1</pouref></select></Body><Pou><Name>1</Name><Body><case><expr>POINT_GLB_AREA</expr><pouref>1</pouref></case><case><expr>POINT_KEEP_AREA</expr><pouref>2</pouref></case><default><pouref>3</pouref></default></Body><Pou><Name>1</Name><Body><call><subroutine><name>comutil.GetPC_EPC_G</name><args><arg>0</arg></args><results /></subroutine></call><set><dest>MoveId</dest><expr>ROUND(comutil.PC_EPC_G[0].pose.x)</expr></set><set><dest>TrjMoveType</dest><expr>ROUND(comutil.PC_EPC_G[0].pose.y)</expr></set><set><dest>TrjSpeed</dest><expr>SSPEED(comutil.PC_EPC_G[0].pose.c,500)</expr></set><select><expr>TrjMoveType</expr><pouref>1</pouref></select><break /></Body><Pou><Name>1</Name><Body><case><expr>MTN_MOVJ</expr><pouref>1</pouref></case><case><expr>MTN_MOVL</expr><pouref>2</pouref></case><default><pouref>3</pouref></default></Body><Pou><Name>1</Name><Body><for><var>PathLen</var><from>0</from><to>(CopyPointNum-1)</to><by>1</by><pouref>1</pouref></for></Body><Pou><Name>1</Name><Body><call><subroutine><name>comutil.GetPC_EPJ_G</name><args><arg>PathLen</arg></args><results /></subroutine></call><if><case><cond>comutil.PC_EPJ_G[PathLen].eaux.j5&gt;0</cond><pouref>1</pouref></case><default><pouref>2</pouref></default></if><set><dest>GlbMoveId</dest><expr>MoveId+PathLen</expr></set><fmjoint><target>comutil.PC_EPJ_G[PathLen]</target><speed>TrjSpeed</speed><zone>TrjSmoot</zone><tool>ToolData</tool><refsys>wobj0</refsys></fmjoint></Body><Pou><Name>1</Name><Body><set><dest>TrjSmoot</dest><expr>z100</expr></set></Body></Pou><Pou><Name>2</Name><Body><set><dest>TrjSmoot</dest><expr>fine</expr></set></Body></Pou></Pou></Pou><Pou><Name>2</Name><Body><for><var>PathLen</var><from>0</from><to>(CopyPointNum-1)</to><by>1</by><pouref>2</pouref></for></Body><Pou><Name>2</Name><Body><call><subroutine><name>comutil.GetPC_EPJ_G</name><args><arg>PathLen</arg></args><results /></subroutine></call><if><case><cond>comutil.PC_EPJ_G[PathLen].eaux.j5&gt;0</cond><pouref>2</pouref></case><default><pouref>3</pouref></default></if><set><dest>TrjProcessType</dest><expr>ROUND(comutil.PC_EPJ_G[PathLen].eaux.j6)</expr></set><set><dest>GlbMoveId</dest><expr>MoveId+PathLen</expr></set><fmlin><target>CALCPOSC(comutil.PC_EPJ_G[PathLen],ToolData,wobj0)</target><speed>TrjSpeed</speed><zone>TrjSmoot</zone><tool>ToolData</tool><refsys>wobj0</refsys></fmlin><if><case><cond>(TrjProcessType==PRC_ARC_ST)</cond><pouref>4</pouref></case></if><if><case><cond>(TrjProcessType==PRC_ARC_ED)</cond><pouref>5</pouref></case></if></Body><Pou><Name>2</Name><Body><set><dest>TrjSmoot</dest><expr>z100</expr></set></Body></Pou><Pou><Name>3</Name><Body><set><dest>TrjSmoot</dest><expr>fine</expr></set></Body></Pou><Pou><Name>4</Name><Body><call><subroutine><name>arcweld.ArcOn</name><args><arg>1</arg></args><results /></subroutine></call></Body></Pou><Pou><Name>5</Name><Body><call><subroutine><name>arcweld.ArcOff</name><args><arg /></args><results /></subroutine></call></Body></Pou></Pou></Pou><Pou><Name>3</Name><Body><message><text>&quot;MoveType:&quot;</text><expr1>TrjMoveType</expr1><expr2 /></message><error><expr>-1</expr><expr1>&quot;Unsupported exercise methods&quot;</expr1><expr2>0</expr2></error></Body></Pou></Pou></Pou><Pou><Name>2</Name><Body><call><subroutine><name>comutil.GetPC_EPC</name><args><arg>0</arg></args><results /></subroutine></call><set><dest>MoveId</dest><expr>ROUND(comutil.PC_EPC[0].pose.x)</expr></set><set><dest>TrjMoveType</dest><expr>ROUND(comutil.PC_EPC[0].pose.y)</expr></set><set><dest>TrjSpeed</dest><expr>SSPEED(comutil.PC_EPC[0].pose.c,500)</expr></set><select><expr>TrjMoveType</expr><pouref>2</pouref></select><break /></Body><Pou><Name>2</Name><Body><case><expr>MTN_MOVJ</expr><pouref>2</pouref></case><case><expr>MTN_MOVL</expr><pouref>3</pouref></case><default><pouref>4</pouref></default></Body><Pou><Name>2</Name><Body><for><var>PathLen</var><from>0</from><to>(CopyPointNum-1)</to><by>1</by><pouref>2</pouref></for></Body><Pou><Name>2</Name><Body><call><subroutine><name>comutil.GetPC_EPJ</name><args><arg>PathLen</arg></args><results /></subroutine></call><if><case><cond>comutil.PC_EPJ[PathLen].eaux.j5&gt;0</cond><pouref>2</pouref></case><default><pouref>3</pouref></default></if><set><dest>GlbMoveId</dest><expr>MoveId+PathLen</expr></set><fmjoint><target>comutil.PC_EPJ[PathLen]</target><speed>TrjSpeed</speed><zone>TrjSmoot</zone><tool>ToolData</tool><refsys>wobj0</refsys></fmjoint></Body><Pou><Name>2</Name><Body><set><dest>TrjSmoot</dest><expr>z100</expr></set></Body></Pou><Pou><Name>3</Name><Body><set><dest>TrjSmoot</dest><expr>fine</expr></set></Body></Pou></Pou></Pou><Pou><Name>3</Name><Body><for><var>PathLen</var><from>0</from><to>(CopyPointNum-1)</to><by>1</by><pouref>3</pouref></for></Body><Pou><Name>3</Name><Body><call><subroutine><name>comutil.GetPC_EPJ</name><args><arg>PathLen</arg></args><results /></subroutine></call><if><case><cond>comutil.PC_EPJ[PathLen].eaux.j5&gt;0</cond><pouref>3</pouref></case><default><pouref>4</pouref></default></if><set><dest>TrjProcessType</dest><expr>ROUND(comutil.PC_EPJ[PathLen].eaux.j6)</expr></set><set><dest>GlbMoveId</dest><expr>MoveId+PathLen</expr></set><fmlin><target>CALCPOSC(comutil.PC_EPJ[PathLen],ToolData,wobj0)</target><speed>TrjSpeed</speed><zone>TrjSmoot</zone><tool>ToolData</tool><refsys>wobj0</refsys></fmlin><if><case><cond>(TrjProcessType==PRC_ARC_ST)</cond><pouref>5</pouref></case></if><if><case><cond>(TrjProcessType==PRC_ARC_ED)</cond><pouref>6</pouref></case></if></Body><Pou><Name>3</Name><Body><set><dest>TrjSmoot</dest><expr>z100</expr></set></Body></Pou><Pou><Name>4</Name><Body><set><dest>TrjSmoot</dest><expr>fine</expr></set></Body></Pou><Pou><Name>5</Name><Body><call><subroutine><name>arcweld.ArcOn</name><args><arg>1</arg></args><results /></subroutine></call></Body></Pou><Pou><Name>6</Name><Body><call><subroutine><name>arcweld.ArcOff</name><args><arg /></args><results /></subroutine></call></Body></Pou></Pou></Pou><Pou><Name>4</Name><Body><message><text>&quot;MoveType:&quot;</text><expr1>TrjMoveType</expr1><expr2 /></message><error><expr>-1</expr><expr1>&quot;Unsupported exercise methods&quot;</expr1><expr2>0</expr2></error></Body></Pou></Pou></Pou><Pou><Name>3</Name><Body><message><text>&quot;WriteArea:&quot;</text><expr1>CopyWriteArea</expr1><expr2 /></message><error><expr>-1</expr><expr1>&quot;The point area Written by software is not supported&quot;</expr1><expr2>0</expr2></error></Body></Pou></Pou></Pou><Pou><Name>Main</Name><Type>Program</Type><VarDeclarations /><Body><call><subroutine><name>comm128_comm_init_</name><args><arg /></args><results /></subroutine></call><wait><condition>PcTellId==0</condition><timeout /><var /></wait><while><cond>true</cond><pouref>1</pouref></while></Body><Pou><Name>1</Name><Body><call><subroutine><name>sbt_comm128_mtion</name><args><arg /></args><results /></subroutine></call></Body></Pou></Pou><Pou><Name>new_ack_</Name><Type>Subroutine</Type><VarDeclarations><VarInterface><Var><Name>Cmd</Name><Type>DINT</Type><Attrib>In</Attrib></Var></VarInterface></VarDeclarations><Body><set><dest>RobotCmd</dest><expr>Cmd</expr></set><set><dest>RobotSep</dest><expr>0</expr></set><set><dest>RobotAck</dest><expr>0</expr></set><set><dest>RobotTellId</dest><expr>PcTellId</expr></set></Body></Pou><Pou><Name>new_stop_</Name><Type>Subroutine</Type><VarDeclarations /><Body><message><text>&quot;Intr StopMove&quot;</text><expr1 /><expr2 /></message><set><dest>CopyPointNum</dest><expr>0</expr></set><call><subroutine><name>new_ack_</name><args><arg>CMD_INIT</arg></args><results /></subroutine></call><message><text>&quot;Intr StopMove Suceess&quot;</text><expr1 /><expr2 /></message><stopmove><expr>0.5</expr></stopmove><clearmove /><startmove><expr /></startmove></Body></Pou><Pou><Name>sbt_comm128_mtion</Name><Type>Subroutine</Type><VarDeclarations /><Body><wait><condition>(PcTellId!=RobotTellId)&amp;&amp;(PcTellId!=0)&amp;&amp;(PcCmd!=CMD_STOP)</condition><timeout /><var /></wait><call><subroutine><name>copy_data_</name><args><arg /></args><results /></subroutine></call><call><subroutine><name>new_ack_</name><args><arg>PcCmd</arg></args><results /></subroutine></call><select><expr>CopyCmd</expr><pouref>1</pouref></select></Body><Pou><Name>1</Name><Body><case><expr>CMD_CTRL</expr><pouref>1</pouref></case><default><pouref>2</pouref></default></Body><Pou><Name>1</Name><Body><call><subroutine><name>exec_trajectorys_</name><args><arg /></args><results /></subroutine></call></Body></Pou><Pou><Name>2</Name><Body><error><expr>-1</expr><expr1>&quot;Motion does not support this mode&quot;</expr1><expr2>0</expr2></error></Body></Pou></Pou></Pou></Pous></XplEnvironment></Xpl-source>