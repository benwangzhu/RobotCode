/***********************************************************

Copyright 2018 - 2023 speedbot All Rights reserved.

file Name: lib_mphelper.h

Description:
  Language             ==   motoplus for Yaskawa ROBOT
  Date                 ==   2023 - 09 - 14
  Modification Data    ==   2023 - 09 - 14

Author: speedbot

Version: 1.0
--*********************************************************************************************************--
--                                                                                                         --
--                                                      .^^^                                               --
--                                               .,~<c+{{{{{{t,                                            -- 
--                                       `^,"!t{{{{{{{{{{{{{{{{+,                                          --
--                                 .:"c+{{{{{{{{{{{{{{{{{{{{{{{{{+,                                        --
--                                "{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{~                                       --
--                               ^{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{!.  `^                                    --
--                               c{{{{{{{{{{{{{c~,^`  `.^:<+{{{!.  `<{{+,                                  --
--                              ^{{{{{{{{{{{!^              `,.  `<{{{{{{+:                                --
--                              t{{{{{{{{{!`                    ~{{{{{{{{{{+,                              --
--                             ,{{{{{{{{{:      ,uDWMMH^        `c{{{{{{{{{{{~                             --
--                             +{{{{{{{{:     ,XMMMMMMw           t{{{{{{{{{{t                             --
--                            ,{{{{{{{{t     :MMMMMMMMM"          ^{{{{{{{{{{~                             --
--                            +{{{{{{{{~     8MMMMMMMMMMWD8##      {{{{{{{{{+                              --
--                           :{{{{{{{{{~     8MMMMMMMMMMMMMMH      {{{{{{{{{~                              --
--                           +{{{{{{{{{c     :MMMMMMMMMMMMMMc     ^{{{{{{{{+                               --
--                          ^{{{{{{{{{{{,     ,%MMMMMMMMMMH"      c{{{{{{{{:                               --
--                          `+{{{{{{{{{{{^      :uDWMMMX0"       !{{{{{{{{+                                --
--                           `c{{{{{{{{{{{"                    ^t{{{{{{{{{,                                --
--                             ^c{{{{{{{{{{{".               ,c{{{{{{{{{{t                                 --
--                               ^c{{{{{{{{{{{+<,^`     .^~c{{{{{{{{{{{{{,                                 --
--                                 ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t                                  --
--                                   ^c{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{t`                                  --
--                                     ^c{{{{{{{{{{{{{{{{{{{{{{{{{{+c"^                                    --                         
--                                       ^c{{{{{{{{{{{{{{{{{+!":^.                                         --
--                                         ^!{{{{{{{{t!",^`                                                --
--                                                                                                         --
--*********************************************************************************************************--
--
*/


#ifndef __SBT_MPHELPER_H__
#define __SBT_MPHELPER_H__

#include "operating_environment.h"

/************************************************************************************
* 功  能：将主机字节序的UDLONG值转换为网络字节序的UDLONG值							*
* 参  数：[IN] HostLongLong 主机字节序的UDLONG值									*
* 返回值：网络字节序的UDLONG值														*
************************************************************************************/
IMPORT UDLONG htonll_(IN UDLONG HostLongLong);

/************************************************************************************
* 功  能：将网络字节序的UDLONG值转换为主机字节序的UDLONG值							*
* 参  数：[IN] NetLongLong 网络字节序的UDLONG值										*
* 返回值：主机字节序的UDLONG值														*
************************************************************************************/
IMPORT UDLONG ntohll_(IN UDLONG NetLongLong);

/************************************************************************************
* 功  能：计算空间两点的距离														*
* 参  数：[IN] x1 第一个点的X坐标													*
*		  [IN] y1 第一个点的Y坐标													*
*		  [IN] z1 第一个点的Z坐标													*
*		  [IN] x2 第二个点的X坐标													*
*		  [IN] y2 第二个点的Y坐标													*
*		  [IN] z2 第二个点的Z坐标													*
* 返回值：两点之间的距离															*
************************************************************************************/
IMPORT FLOAT calculate_distance_(IN FLOAT x1, IN FLOAT y1, IN FLOAT z1, IN FLOAT x2, IN FLOAT y2, IN FLOAT z2);

/************************************************************************************
* 功  能：计算Modbus CRC16校验值													*
* 参  数：[IN] Buffer 缓存字节数组													*
*		  [IN] Len 缓存长度															*
* 返回值：Modbus CRC16校验值														*
************************************************************************************/
IMPORT USHORT crc16_(IN UCHAR* Buffer, IN INT32 Len);

/************************************************************************************
* 功  能：计算BesselFilter滤波值													*
* 参  数：[IN] X 输入信号															*
*		  [IN] Y 输出信号															*
* 返回值：滤波输出信号																*
************************************************************************************/
IMPORT DOUBLE bessel_filter_(IN const DOUBLE X[7], IN const DOUBLE Y[6]);

/************************************************************************************
* 功  能：计算均值滤波器的输出值													*
* 参  数：[IN] X 输入信号															*
*		  [IN] Len 输入信号个数														*
* 返回值：滤波输出值																*
************************************************************************************/
IMPORT DOUBLE mean_filter_(IN const DOUBLE X[], IN const INT32 Len);

/************************************************************************************
* 功  能：将字符全部转换为大写														*
* 参  数：[INOUT] src 字符串														*
* 返回值：输出大写字符串															*
************************************************************************************/
IMPORT CHAR* str_upr_(IN CHAR* src);

/************************************************************************************
* 功  能：从一个字符串中解析坐标系数据												*
* 参  数：[IN] 	StringCoord	包含坐标系数据的字符串									*
*		  [OUT] UfData		用户坐标系数据											*
* 返回值：函数执行是否成功。														*
************************************************************************************/
IMPORT STATUS parse_coord_(IN CHAR* StringCoord, OUT MP_COORD* UfData);

/************************************************************************************
* 功  能：实现坐标变换的功能														*
* 参  数：[IN] TransMat	变换矩阵												*
*		  [IN] ScrCoord	变换前的坐标值											*
*		  [IN] DstCoord	变换后的坐标值											*
* 返回值：函数执行是否成功。														*
************************************************************************************/
IMPORT STATUS trans_from_coord_(IN MP_FRAME* TransMat, IN MP_XYZ* ScrCoord, OUT MP_XYZ* DstCoord);

/************************************************************************************
* 功  能：初始化MP_FRAME															*
* 参  数：[IN] Mat	矩阵指针														*
* 返回值：函数执行是否成功。														*
************************************************************************************/
IMPORT STATUS init_frame_(INOUT MP_FRAME* Mat);


IMPORT CHAR* sub_string_(IN CHAR* Ch, IN INT32 Pos, IN INT32 Length);

IMPORT INT32 find_string_(IN const CHAR *String, IN const CHAR *Dest);








#endif